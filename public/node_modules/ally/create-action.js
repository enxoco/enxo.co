"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _ = require("lodash");

module.exports = (function () {
  function CreateAction() {
    _classCallCheck(this, CreateAction);
  }

  _createClass(CreateAction, null, [{
    key: "bindActions",
    value: function bindActions(action, dispatcher) {
      var _arguments = arguments;

      var props = Object.getOwnPropertyNames(action);

      _.forEach(props, function (prop) {
        // Excluding underscore methods (private) and the constructor
        if (prop !== "constructor" && prop !== "actionName" && !_.startsWith(prop, "_")) {
          (function () {

            // Creating constant from the method name
            var constant = _.snakeCase(prop).toUpperCase();
            var originalMethod = action[prop];

            action[prop] = function () {
              var result = originalMethod.apply(action, _.values(_arguments));

              if (result === undefined) {
                return undefined;
              }

              return dispatcher.dispatch({
                actionType: constant,
                data: result
              });
            };
          })();
        }
      });
    }
  }]);

  return CreateAction;
})();